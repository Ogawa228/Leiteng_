import sys
from PyQt5.QtWidgets import QApplication, QDialog, QVBoxLayout, QLabel, QLineEdit, QPushButton, QDialogButtonBox, QMessageBox, QProgressBar
from PyQt5.QtCore import QProcess

class ADBParametersDialog(QDialog):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setWindowTitle("ADB 参数配置")
        self.setFixedSize(800, int(800 / 1.618))  # Set window size based on the golden ratio
        
        self.setup_ui()
        self.adb_process = QProcess()
        self.adb_process.finished.connect(self.adb_command_finished)

    def setup_ui(self):
        layout = QVBoxLayout()

        layout.addWidget(QLabel("设备ID:"))
        self.device_id_line_edit = QLineEdit("0123456789ABCDEF")
        layout.addWidget(self.device_id_line_edit)

        layout.addWidget(QLabel("包名:"))
        self.package_name_line_edit = QLineEdit("com.ss.android.lark")
        layout.addWidget(self.package_name_line_edit)

        layout.addWidget(QLabel("活动名:"))
        self.activity_name_line_edit = QLineEdit("com.ss.android.lark.main.app.MainActivity")
        layout.addWidget(self.activity_name_line_edit)

        self.detect_button = QPushButton("自动检测 ADB 参数")
        self.detect_button.clicked.connect(self.auto_detect_parameters)
        layout.addWidget(self.detect_button)

        self.adb_guide_button = QPushButton("手动获取 ADB 参数指引")
        self.adb_guide_button.clicked.connect(self.show_adb_guide)
        layout.addWidget(self.adb_guide_button)

        self.progress_bar = QProgressBar()
        self.progress_bar.setVisible(False)  # Initially hide the progress bar
        layout.addWidget(self.progress_bar)

        self.button_box = QDialogButtonBox(QDialogButtonBox.Ok | QDialogButtonBox.Cancel)
        self.button_box.accepted.connect(self.accept)
        self.button_box.rejected.connect(self.reject)
        layout.addWidget(self.button_box)

        self.setLayout(layout)

    def auto_detect_parameters(self):
        self.progress_bar.setVisible(True)
        self.adb_process.start("adb", ["devices"])

    def adb_command_finished(self, exitCode, exitStatus):
        if self.adb_process.program() == "adb" and self.adb_process.arguments() == ["devices"]:
            output = self.adb_process.readAllStandardOutput().data().decode()
            devices = [line for line in output.splitlines() if "\tdevice" in line]
            if devices:
                device_id = devices[0].split("\t")[0]
                self.device_id_line_edit.setText(device_id)
                self.adb_process.start("adb", ["-s", device_id, "shell", "dumpsys", "activity", "activities", "|", "grep", "mResumedActivity"])
            else:
                QMessageBox.warning(self, "警告", "未检测到任何设备。")
                self.progress_bar.setVisible(False)
        elif self.adb_process.program() == "adb" and "-s" in self.adb_process.arguments():
            output = self.adb_process.readAllStandardOutput().data().decode()
            if "mResumedActivity" in output:
                activity_info = output.split("mResumedActivity")[1].split()[1].split("/")
                if len(activity_info) == 2:
                    self.package_name_line_edit.setText(activity_info[0])
                    self.activity_name_line_edit.setText(activity_info[1].split("}")[0])
            self.progress_bar.setVisible(False)

    def show_adb_guide(self):
        guide_text = ("获取 ADB 参数指引：\n\n"
                      "1. 设备 ID：在命令行中输入 'adb devices'，设备 ID 将在命令输出中显示。\n"
                      "2. 包名和活动名：在命令行中输入 'adb shell dumpsys activity activities | grep mResumedActivity'，"
                      "应用的包名和活动名将在命令输出中显示。\n\n"
                      "请确保您的设备已通过 USB 连接到计算机，并且已在开发者选项中启用了 USB 调试。")
        QMessageBox.information(self, "ADB 参数获取指引", guide_text)

if __name__ == '__main__':
    app = QApplication(sys.argv)
    dialog = ADBParametersDialog()
    if dialog.exec_():
        device_id = dialog.device_id_line_edit.text()
        package_name = dialog.package_name_line_edit.text()
        activity_name = dialog.activity_name_line_edit.text()
        print(f"Device ID: {device_id}\nPackage Name: {package_name}\nActivity Name: {activity_name}")
    sys.exit(app.exec_())
